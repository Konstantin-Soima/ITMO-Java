17 июня крайний срок

На курсовую нужно написать клиент серверное приложение чат (можно добавить отправку файлов)

клиент
1. Читает сообщение из консоли и формирует обьект сообщения и отправляет на сервер
2. Получает входящее от сервера сообщение и выводит в консоль
Потоки клиента:
1. Основной поток (main): формирование и отправка сообщений
2. Поток reader (читать сообщение от сервера)

сервер
ServerSocket ss = new ServerSocket(port);
Socket clientSocket = ss.accept();

Потоки сервера:
1. Поток writer (отправка сообщений клиентам)
2-N. Потоки reader (читают сообщения от клиентов):
на каждого клиента - отдельный поток!!!

берём потокобезопасный контейнер (сет, мапа) и складываем в него все приходящие соединения
После отсоединения клиента - соединение надо выкинуть из коллекции (отсоединение может быть даже в момент передачи)
writer поток проходит по ссету и рассылает сообщение
сообщение храниться в блокирующей очереди

Клиент формирует:
Сообщение
дата отправки
тело сообщения
(сериализация/десериализация)

и отправляет на сервер

Сервер пересылает сообщение всем кроме отправителя

до29:
поставь постгрю

если десктопное javaFX

до 10 июня должна быть тема диплома

//1 concurerent.locks - пакет для замены блоков synchronizsed
//2 Exchanger - класс обменник между потокам t1-> [] <-t2
//3 CountDawnLatch - тип для выравнивания потоков (допустим нужно дождаться двух событий, тогда создаётся счётчик, из событий счётчик уменьшается, при 0 стартует ещё один поток)
//4 AtomicXXX для работы с атомарностью
        AtomicInteger
        AtomicLong
// Semaphore (1) - флаги справедливости
//ForkJoinPool

дз банк
топ 100
официант
